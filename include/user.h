#ifndef USER_H
#define USER_H

#include <string>
#include <vector>
#include "wallet.h"

// Lop user: luu tru thong tin nguoi dung
class User {
public:
    std::string username;
    std::string password;
    std::string fullName;
    std::string email;
    std::string phone;
    std::string role; //vai tro nguoi dung (admin/user)
    std::string walletID; // id vi
    bool isAutoGeneratedPassword; // tu dong sinh passwd
    std::string oathSecretKey; // ma bi mat cho otp

    User(std::string u, std::string p, std::string f, std::string e, std::string ph, std::string r, std::string w, std::string oathKey, bool autoGen = false);
};

std::string bytesToHexString(const unsigned char* bytes, size_t len); // chuyen byte sang hex
std::string generateRandomPassword(int length); // tao passwd ngau nhien
std::string generateOATHSecretKey(int length = 16); // ma bi mat cho otp
std::string hashPassword(const std::string& password); // sha-256
std::string generateSimulatedOTP(); // otp
bool verifyOTP(const std::string& secretKey, const std::string& userOtp); // xac thuc otp

void saveUsers(const std::vector<User>& users, const std::string& relativeFilename); // luu danh sach nguoi dung
std::vector<User> loadUsers(const std::string& relativeFilename); // tai danh sach nguoi dung

User registerUser(std::vector<User>& users, bool isAdminRegistration = false); // dang ky tai khoan
User* login(std::vector<User>& users); // dang nhap
void changePassword(User& user, std::vector<User>& users); // doi passwd
void updateProfile(User& user, std::vector<User>& users); // update thong tin nguoi dung
void viewUsers(const std::vector<User>& users); // xem danh sach nguoi dung, chi danh cho admin
void adminEditUser(std::vector<User>& users); // chinh sua thong tin nguoi dung, chi danh cho admin

#endif